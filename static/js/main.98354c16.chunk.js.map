{"version":3,"sources":["Component/Timer.js","App.js","reportWebVitals.js","index.js"],"names":["Timer","id","timeStart","autoStart","step","useState","time","setTime","timerPlay","setTimerPlay","counting","setCounting","width","setWidth","onTimeStart","console","log","useEffect","onTick","idTimer","setInterval","clearInterval","style","className","Button","variant","color","onClick","App","map","item","key","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6OAGe,SAASA,EAAT,GAAoD,IAAnCC,EAAkC,EAAlCA,GAAIC,EAA8B,EAA9BA,UAAWC,EAAmB,EAAnBA,UAAWC,EAAQ,EAARA,KAAQ,EACtCC,mBAASH,GAD6B,mBACvDI,EADuD,KACjDC,EADiD,OAE5BF,oBAAS,GAFmB,mBAEvDG,EAFuD,KAE5CC,EAF4C,OAG9BJ,oBAAS,GAHqB,mBAGvDK,EAHuD,KAG7CC,EAH6C,OAIpCN,mBAAS,KAJ2B,mBAIvDO,EAJuD,KAIhDC,EAJgD,KAaxDC,EAAc,kBAAMC,QAAQC,IAAR,sDAAwBf,EAAxB,wDAG1BgB,qBAAU,WACFd,GACAM,GAAa,KAElB,CAACN,IAEJc,qBAAU,WACFP,GAjBO,SAACJ,GAASS,QAAQC,IAAR,sDAAwBf,EAAxB,oGAAgDK,IAkBjEY,CAAOZ,KAEZ,CAACI,EAAUJ,IAEdW,qBAAU,WACFT,EACAM,KACQN,GAAaF,EAAO,GAjBVS,QAAQC,IAAR,sDAAwBf,EAAxB,oDAoBvB,CAACO,IAEJS,qBAAU,WACO,IAATX,IA7BJS,QAAQC,IAAR,sDAAwBf,EAAxB,8DACAa,IACAD,EAAS,KACTN,EAAQL,OA+BZe,qBAAU,WACN,IAAIE,EAAUC,aAAY,WACT,IAATd,GAAcE,IACdK,GAAUP,EAAQF,EAAO,KAASF,EAAY,KAC9CK,EAAQD,EAAQF,EAAO,QAE5B,CAACA,IAEJ,OAAO,WACHiB,cAAcF,OAItB,IAAMG,EAAQ,CAAEV,MAAOA,EAAQ,KAC/B,OACI,sBAAKW,UAAU,QAAf,UACI,qBAAKA,UAAU,OAAOD,MAAOA,EAA7B,SAAqChB,IACrC,sBAAKiB,UAAU,SAAf,UACI,cAACC,EAAA,EAAD,CAAQC,QAAQ,YAAYC,MAAM,UAAUzB,GAAG,QAAQ0B,QAAS,kBAAMlB,GAAa,IAAnF,mBACA,cAACe,EAAA,EAAD,CAAQC,QAAQ,YAAYE,QAAS,kBAAsChB,GAA/BD,IAA5C,oBACA,cAACc,EAAA,EAAD,CAAQvB,GAAG,QAAQwB,QAAQ,YAAYC,MAAM,YAAYC,QAAS,kBAAMlB,GAAa,IAArF,yBCjCDmB,MA5Bf,WAqBE,OACE,qBAAKL,UAAU,MAAf,SArBa,CACb,CACEtB,GAAI,EACJC,UAAW,GACXC,WAAW,EACXC,KAAM,KAER,CACEH,GAAI,EACJC,UAAW,IACXC,WAAW,EACXC,KAAM,KAER,CACEH,GAAI,EACJC,UAAW,GACXC,WAAW,EACXC,KAAM,MAKEyB,KAAI,SAAAC,GAAI,OAAI,wBAAC9B,EAAD,2BAAW8B,GAAX,IAAiBC,IAAKD,EAAK7B,YCftC+B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.98354c16.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport Button from '@material-ui/core/Button';\r\n\r\nexport default function Timer({ id, timeStart, autoStart, step }) {\r\n    const [time, setTime] = useState(timeStart);\r\n    const [timerPlay, setTimerPlay] = useState(false);\r\n    const [counting, setCounting] = useState(false);\r\n    const [width, setWidth] = useState(100);\r\n\r\n    const onTick = (time) => console.log(`Таймер № ${id} Залишилось часу:  ${time}`);\r\n    const onTimeEnd = () => {\r\n        console.log(`Таймер № ${id} Час вийшов!`);\r\n        onTimeStart();\r\n        setWidth(100);\r\n        setTime(timeStart);\r\n    }\r\n    const onTimeStart = () => console.log(`Таймер № ${id} запущено!`);\r\n    const onTimePause = () => console.log(`Таймер № ${id} на паузі!`);\r\n\r\n    useEffect(() => {\r\n        if (autoStart) {\r\n            setTimerPlay(true);\r\n        }\r\n    }, [autoStart])\r\n\r\n    useEffect(() => {\r\n        if (counting) {\r\n            onTick(time);\r\n        }\r\n    }, [counting, time])\r\n\r\n    useEffect(() => {\r\n        if (timerPlay) {\r\n            onTimeStart();\r\n        } else if (!timerPlay && time > 0) {\r\n            onTimePause();\r\n        }\r\n    }, [timerPlay])\r\n\r\n    useEffect(() => {\r\n        if (time === 0) {\r\n            onTimeEnd();\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        let idTimer = setInterval(() => {\r\n            if (time !== 0 && timerPlay) {\r\n                setWidth((time - (step / 1000)) / timeStart * 100);\r\n                setTime(time - (step / 1000));\r\n            }\r\n        }, [step])\r\n\r\n        return () => {\r\n            clearInterval(idTimer);\r\n        }\r\n    })\r\n    \r\n    const style = { width: width + \"%\" }\r\n    return (\r\n        <div className=\"timer\">\r\n            <div className=\"time\" style={style}>{time}</div>\r\n            <div className=\"button\">\r\n                <Button variant=\"contained\" color=\"primary\" id=\"start\" onClick={() => setTimerPlay(true)}>Start</Button>\r\n                <Button variant=\"contained\" onClick={() => !counting ? setCounting(true) : setCounting(false)}>onTick</Button>\r\n                <Button id=\"pause\" variant=\"contained\" color=\"secondary\" onClick={() => setTimerPlay(false)}>Pause</Button>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n","import React from \"react\";\nimport './App.css';\nimport Timer from \"./Component/Timer\"\n\nfunction App() {\n  const timers = [\n    {\n      id: 1,\n      timeStart: 10,\n      autoStart: false,\n      step: 1000,\n    },\n    {\n      id: 2,\n      timeStart: 100,\n      autoStart: true,\n      step: 1000,\n    },\n    {\n      id: 3,\n      timeStart: 50,\n      autoStart: true,\n      step: 5000,\n    }]\n\n  return (\n    <div className=\"App\">\n      {timers.map(item => <Timer {...item} key={item.id} />)}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}